{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withModifiers as _withModifiers, resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, createStaticVNode as _createStaticVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '../../../../public/images/career/rimba-logo.png';\nconst _hoisted_1 = {\n  class: \"modal-overlay\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"head-form\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"boxie\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"\"\n})]), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"boxie\"\n}, [/*#__PURE__*/_createTextVNode(\" You are applying for a \"), /*#__PURE__*/_createElementVNode(\"strong\", null, \"UI/UX Designer\"), /*#__PURE__*/_createTextVNode(\" position \"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\" at \"), /*#__PURE__*/_createElementVNode(\"strong\", null, \"PT. RIMBA ANANTA VIKASA INDONESIA\")])], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  action: \"\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"career-form\\\"><div class=\\\"boxie\\\"><div class=\\\"form-group\\\"><label for=\\\"fullname\\\"> Full Name <span class=\\\"required-star\\\">*</span></label><input type=\\\"text\\\" id=\\\"fullname\\\" name=\\\"fullname\\\" class=\\\"input-form\\\"></div><div class=\\\"form-group\\\"><label for=\\\"phonenumber\\\"> Phone Number <span class=\\\"required-star\\\">*</span></label><input type=\\\"text\\\" id=\\\"phone\\\" class=\\\"form-control\\\" placeholder=\\\"Phone Number\\\" name=\\\"name\\\"></div><div class=\\\"form-group\\\"><label for=\\\"upload-cv\\\"> Upload Your CV/Resume <span class=\\\"required-star\\\">*</span></label><div class=\\\"drag-area\\\"><div class=\\\"icon\\\"><i class=\\\"fas fa-cloud-upload-alt\\\"></i></div><p>Drag &amp; Drop to Upload File</p><p>Upload the document in .PDF max 10MB</p><p>OR</p><button>Browse File</button><input type=\\\"file\\\" hidden></div></div></div><div class=\\\"boxie\\\"><div class=\\\"form-group\\\"><label for=\\\"email\\\"> Email <span class=\\\"required-star\\\">*</span></label><input type=\\\"text\\\" id=\\\"email\\\" name=\\\"email\\\" class=\\\"input-form\\\"></div><div class=\\\"form-group\\\"><label for=\\\"cover-letter\\\"> Cover Letter <span class=\\\"required-star\\\">*</span></label><textarea name=\\\"coverl\\\" id=\\\"cover-letter\\\" placeholder=\\\"Write your cover letter here...\\\" rows=\\\"10\\\"></textarea></div></div></div>\", 1);\nconst _hoisted_5 = {\n  class: \"button-wrap float-right\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"close-img\",\n  src: \"\",\n  alt: \"\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_7 = [_hoisted_6];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ModalSuccess = _resolveComponent(\"ModalSuccess\");\n  const _component_ModalClose = _resolveComponent(\"ModalClose\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"modal\",\n    onClick: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"stop\"]))\n  }, [_hoisted_2, _createElementVNode(\"form\", _hoisted_3, [_hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n    class: \"btn btn-primary\",\n    type: \"button\",\n    onClick: _cache[0] || (_cache[0] = $event => $data.showModalSuccess = true)\n  }, \" Ok \"), _createElementVNode(\"button\", {\n    class: \"btn btn-secondary ml-2\",\n    type: \"button\",\n    onClick: _cache[1] || (_cache[1] = $event => $data.showModalClose = true)\n  }, \" Cancel \")])])]), _createElementVNode(\"div\", {\n    class: \"close\",\n    onClick: _cache[3] || (_cache[3] = $event => _ctx.$emit('close-modal'))\n  }, _hoisted_7)]), _withDirectives(_createVNode(_component_ModalSuccess, {\n    onCloseModal: _cache[4] || (_cache[4] = $event => $data.showModalSuccess = false)\n  }, null, 512 /* NEED_PATCH */), [[_vShow, $data.showModalSuccess]]), _withDirectives(_createVNode(_component_ModalClose, {\n    onCloseModal: _cache[5] || (_cache[5] = $event => $data.showModalClose = false)\n  }, null, 512 /* NEED_PATCH */), [[_vShow, $data.showModalClose]])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";OAKeA,UAAqD;;EAJ7DC,KAAK,EAAC;AAAe;gCAEtBC,oBAQM;EARDD,KAAK,EAAC;AAAW,iBACpBC,oBAEM;EAFDD,KAAK,EAAC;AAAO,iBAChBC,oBAAoE;EAA/DC,GAAqD,EAArDH,UAAqD;EAACI,GAAG,EAAC;mBAEjEF,oBAGM;EAHDD,KAAK,EAAC;AAAO,kCAAC,0BACM,oCAA+B,gBAAvB,gBAAc,iCAAS,YAAU,oCAAM,2CACnE,oCAAkD,gBAA1C,mCAAiC;;EAG1CI,MAAM,EAAC;AAAE;;;EA8DRJ,KAAK,EAAC;AAAyB;gCAmBtCC,oBAAuC;EAAlCD,KAAK,EAAC,WAAW;EAACE,GAAG,EAAC,EAAE;EAACC,GAAG,EAAC;;oBAAlCE,UAAuC;;;;6DA5F3CJ,oBA8FM,OA9FNK,UA8FM,GA7FJL,oBAyFM;IAzFDD,KAAK,EAAC,OAAO;IAAEO,OAAK,2CAAN,QAAW;MAC5BC,UAQM,EACNP,oBA8EO,QA9EPQ,UA8EO,GA7ELC,UA4DM,EACNT,oBAeM,OAfNU,UAeM,GAdJV,oBAMS;IALPD,KAAK,EAAC,iBAAiB;IACvBY,IAAI,EAAC,QAAQ;IACZL,OAAK,sCAAEM,sBAAgB;KACzB,MAED,GACAZ,oBAMS;IALPD,KAAK,EAAC,wBAAwB;IAC9BY,IAAI,EAAC,QAAQ;IACZL,OAAK,sCAAEM,oBAAc;KACvB,UAED,SAINZ,oBAEM;IAFDD,KAAK,EAAC,OAAO;IAAEO,OAAK,sCAAEO,UAAK;oCAIlCC,aAGEC;IADCC,YAAW,sCAAEJ,sBAAgB;4CADtBA,sBAAgB,qBAG1BE,aAA4EG;IAAvCD,YAAW,sCAAEJ,oBAAc;4CAA5CA,oBAAc","names":["_imports_0","class","_createElementVNode","src","alt","action","_hoisted_6","_hoisted_1","onClick","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","type","$data","_ctx","_createVNode","_component_ModalSuccess","onCloseModal","_component_ModalClose"],"sourceRoot":"","sources":["D:\\Personal\\rimba-frontend\\src\\components\\career\\modal\\ModalForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"modal-overlay\">\r\n    <div class=\"modal\" @click.stop>\r\n      <div class=\"head-form\">\r\n        <div class=\"boxie\">\r\n          <img src=\"../../../../public/images/career/rimba-logo.png\" alt=\"\" />\r\n        </div>\r\n        <div class=\"boxie\">\r\n          You are applying for a <strong>UI/UX Designer</strong> position <br />\r\n          at <strong>PT. RIMBA ANANTA VIKASA INDONESIA</strong>\r\n        </div>\r\n      </div>\r\n      <form action=\"\">\r\n        <div class=\"career-form\">\r\n          <div class=\"boxie\">\r\n            <div class=\"form-group\">\r\n              <label for=\"fullname\">\r\n                Full Name <span class=\"required-star\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"fullname\"\r\n                name=\"fullname\"\r\n                class=\"input-form\"\r\n              />\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"phonenumber\">\r\n                Phone Number <span class=\"required-star\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"phone\"\r\n                class=\"form-control\"\r\n                placeholder=\"Phone Number\"\r\n                name=\"name\"\r\n              />\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"upload-cv\">\r\n                Upload Your CV/Resume <span class=\"required-star\">*</span>\r\n              </label>\r\n              <div class=\"drag-area\">\r\n                <div class=\"icon\"><i class=\"fas fa-cloud-upload-alt\"></i></div>\r\n                <p>Drag & Drop to Upload File</p>\r\n                <p>Upload the document in .PDF max 10MB</p>\r\n                <p>OR</p>\r\n                <button>Browse File</button>\r\n                <input type=\"file\" hidden />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"boxie\">\r\n            <div class=\"form-group\">\r\n              <label for=\"email\">\r\n                Email <span class=\"required-star\">*</span>\r\n              </label>\r\n              <input type=\"text\" id=\"email\" name=\"email\" class=\"input-form\" />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"cover-letter\">\r\n                Cover Letter <span class=\"required-star\">*</span>\r\n              </label>\r\n              <textarea\r\n                name=\"coverl\"\r\n                id=\"cover-letter\"\r\n                placeholder=\"Write your cover letter here...\"\r\n                rows=\"10\"\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"button-wrap float-right\">\r\n          <button\r\n            class=\"btn btn-primary\"\r\n            type=\"button\"\r\n            @click=\"showModalSuccess = true\"\r\n          >\r\n            Ok\r\n          </button>\r\n          <button\r\n            class=\"btn btn-secondary ml-2\"\r\n            type=\"button\"\r\n            @click=\"showModalClose = true\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <div class=\"close\" @click=\"$emit('close-modal')\">\r\n      <img class=\"close-img\" src=\"\" alt=\"\" />\r\n    </div>\r\n  </div>\r\n  <ModalSuccess\r\n    v-show=\"showModalSuccess\"\r\n    @close-modal=\"showModalSuccess = false\"\r\n  />\r\n  <ModalClose v-show=\"showModalClose\" @close-modal=\"showModalClose = false\" />\r\n</template>\r\n\r\n<script>\r\nimport ModalSuccess from \"./ModalSuccess.vue\";\r\nimport ModalClose from \"./ModalClose.vue\";\r\nimport \"intl-tel-input/build/css/intlTelInput.css\";\r\nimport intlTelInput from \"intl-tel-input\";\r\n\r\nexport default {\r\n  components: { ModalSuccess, ModalClose },\r\n  name: \"ModalForm\",\r\n  data() {\r\n    return {\r\n      showModalSuccess: false,\r\n      showModalClose: false,\r\n    };\r\n  },\r\n\r\n  mounted: function () {\r\n    const inputTelp = document.querySelector(\"#phone\");\r\n    intlTelInput(inputTelp, {\r\n      initialCountry: \"in\",\r\n      separateDialCode: true,\r\n    });\r\n\r\n    //selecting all required elements\r\n    const dropArea = document.querySelector(\".drag-area\"),\r\n      dragText = dropArea.querySelector(\"header\"),\r\n      button = dropArea.querySelector(\"button\"),\r\n      input = dropArea.querySelector(\"input\");\r\n    let file; //this is a global variable and we'll use it inside multiple functions\r\n\r\n    button.onclick = () => {\r\n      input.click(); //if user click on the button then the input also clicked\r\n    };\r\n\r\n    input.addEventListener(\"change\", function () {\r\n      //getting user select file and [0] this means if user select multiple files then we'll select only the first one\r\n      file = this.files[0];\r\n      dropArea.classList.add(\"active\");\r\n      showFile(); //calling function\r\n    });\r\n\r\n    //If user Drag File Over DropArea\r\n    dropArea.addEventListener(\"dragover\", (event) => {\r\n      event.preventDefault(); //preventing from default behaviour\r\n      dropArea.classList.add(\"active\");\r\n      dragText.textContent = \"Release to Upload File\";\r\n    });\r\n\r\n    //If user leave dragged File from DropArea\r\n    dropArea.addEventListener(\"dragleave\", () => {\r\n      dropArea.classList.remove(\"active\");\r\n      dragText.textContent = \"Drag & Drop to Upload File\";\r\n    });\r\n\r\n    //If user drop File on DropArea\r\n    dropArea.addEventListener(\"drop\", (event) => {\r\n      event.preventDefault(); //preventing from default behaviour\r\n      //getting user select file and [0] this means if user select multiple files then we'll select only the first one\r\n      file = event.dataTransfer.files[0];\r\n      showFile(); //calling function\r\n    });\r\n\r\n    function showFile() {\r\n      let fileType = file.type; //getting selected file type\r\n      let validExtensions = [\"image/jpeg\", \"image/jpg\", \"image/png\"]; //adding some valid image extensions in array\r\n      if (validExtensions.includes(fileType)) {\r\n        //if user selected file is an image file\r\n        let fileReader = new FileReader(); //creating new FileReader object\r\n        fileReader.onload = () => {\r\n          let fileURL = fileReader.result; //passing user file source in fileURL variable\r\n          // UNCOMMENT THIS BELOW LINE. I GOT AN ERROR WHILE UPLOADING THIS POST SO I COMMENTED IT\r\n          // let imgTag = `<img src=\"${fileURL}\" alt=\"image\">`; //creating an img tag and passing user selected file source inside src attribute\r\n          dropArea.innerHTML = imgTag; //adding that created img tag inside dropArea container\r\n        };\r\n        fileReader.readAsDataURL(file);\r\n      } else {\r\n        alert(\"This is not an Image File!\");\r\n        dropArea.classList.remove(\"active\");\r\n        dragText.textContent = \"Drag & Drop to Upload File\";\r\n      }\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  background-color: #00000075;\r\n}\r\n.modal {\r\n  text-align: center;\r\n  background-color: white;\r\n  width: 65%;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 50px 50px;\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n}\r\n.close {\r\n  margin: 10% 0 0 16px;\r\n  cursor: pointer;\r\n}\r\n.close-img {\r\n  width: 25px;\r\n}\r\n.check {\r\n  width: 150px;\r\n}\r\nbutton {\r\n  background-color: #ac003e;\r\n  width: 150px;\r\n  height: 40px;\r\n  color: white;\r\n  font-size: 14px;\r\n  border-radius: 16px;\r\n  margin-top: 50px;\r\n}\r\n.head-form {\r\n  display: flex;\r\n  width: 100%;\r\n  padding: 0px 100px;\r\n  margin-bottom: 40px;\r\n}\r\n.head-form .boxie:nth-child(1) {\r\n  width: 20%;\r\n}\r\n.head-form .boxie:nth-child(1) img {\r\n  width: 100%;\r\n  text-align: center;\r\n}\r\n.head-form .boxie:nth-child(2) {\r\n  width: 80%;\r\n  font-weight: 400;\r\n  font-size: 20px;\r\n  margin: auto;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #444444;\r\n}\r\n.career-form {\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  width: 100%;\r\n  column-gap: 20px;\r\n  text-align: left;\r\n}\r\n.career-form .boxie {\r\n  grid-column: span 3;\r\n}\r\n\r\n/* Upload Box */\r\n.drag-area {\r\n  border: 2px dashed #8e8e8e;\r\n  height: 200px;\r\n  width: 100%;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n}\r\n.drag-area.active {\r\n  border: 2px solid #000;\r\n}\r\n.drag-area .icon {\r\n  font-size: 26px;\r\n  color: #000;\r\n}\r\n.drag-area header {\r\n  font-size: 30px;\r\n  font-weight: 500;\r\n  color: #000;\r\n}\r\n.drag-area p {\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n\r\n  color: #8e8e8e;\r\n}\r\n.drag-area span {\r\n  font-size: 25px;\r\n  font-weight: 500;\r\n  color: #000;\r\n  margin: 10px 0 15px 0;\r\n}\r\n.drag-area button {\r\n  padding: 10px 15px !important;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n\r\n  color: #fff;\r\n  border: none;\r\n  outline: none;\r\n  background: #8e8e8e;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin-top: 0;\r\n}\r\n.drag-area img {\r\n  height: 100%;\r\n  width: 100%;\r\n  object-fit: cover;\r\n  border-radius: 5px;\r\n}\r\n/* End Upload Box */\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}